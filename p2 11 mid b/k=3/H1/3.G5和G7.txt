#11整除b 求H1 
kk=3
Q=[13,17,19,23,29,31,37]
for m in range(len(Q)):
    q=Q[m]
#先求l
    L=[]
    for i in range(len(divisors(396))):
        if Integers(2)(divisors(396)[i])==0 and is_prime(divisors(396)[i]+1) and divisors(396)[i]+1!=kk and divisors(396)[i]+1!=q and divisors(396)[i]+1<200:
            L.append(divisors(396)[i]+1)
    print(q,'L=',L)
#再由N求f
    f = Newforms(2^5*kk, names='a')
    for i in range(len(f)):
        C=f[i].padded_list(200)#求系数
        clf=[]
        for i in range(len(L)):
            l=L[i]
            clf.append(C[l])
        print(q,'clf=',clf)
#求G5
    l=5
    cl=2
    BS= [1, 2, 3, 4] 
    BT= [2, 1, 2, 0]
    Est=[]
    F11=Integers(11)
    for i in range(len(BS)):
        s=BS[i]
        t=BT[i]
        E=[0,2*t,0,t^2-s^11,0]#代入s和t得到的椭圆曲线
        Est.append(E)
    #print('Est',Est)#根据s和t的值得到的j=1时所有的椭圆曲线

    C1S=[]
    C1T=[]
    for j in range(len(Est)):
        F=GF(l)
        Est1=EllipticCurve(F,Est[j])
        alE=l+1-Est1.cardinality()#计算al（Est1）
        result=F11(alE-cl)
        if result==0:#判断Norm条件
            C1S.append(BS[j])
            C1T.append(BT[j])
            #print(Est[j])#得到满足Norm条件的曲线以及对应的s和t的值
    #print("C1S",C1S,"C1T",C1T)

    D1=[]
    for i in range(len(C1S)):
        s=C1S[i]
        t=C1T[i]
        d=Integers(l)(t^2-s^11)
        D1.append(d)
    #print("D1",D1)

    G5=[]
    for b in range(396):
        if Integers(4)(kk*q^b)==3 and Integers(11)(b)==0 and Integers(l)(kk*q^b) in D1:
            G5.append(b)
    print("G5=",G5)

#求G7
    l=7
    cl=-4
    BS=[1,2,3,4,5,6]#B5中s的值
    BT=[2,4,0,1,0,0]#B5中t的值
    Est=[]
    F11=Integers(11)
    for i in range(len(BS)):
        s=BS[i]
        t=BT[i]
        E=[0,2*t,0,t^2-s^11,0]#代入s和t得到的椭圆曲线
        Est.append(E)
    #print('Est',Est)#根据s和t的值得到的j=1时所有的椭圆曲线

    C1S=[]
    C1T=[]
    for j in range(len(Est)):
        F=GF(l)
        Est1=EllipticCurve(F,Est[j])
        alE=l+1-Est1.cardinality()#计算al（Est1）
        result=F11(alE-cl)
        if result==0:#判断Norm条件
            C1S.append(BS[j])
            C1T.append(BT[j])
            #print(Est[j])#得到满足Norm条件的曲线以及对应的s和t的值
    #print("C1S=",C1S,"C1T=",C1T)

    D1=[]
    for i in range(len(C1S)):
        s=C1S[i]
        t=C1T[i]
        d=Integers(l)(t^2-s^11)
        D1.append(d)
    #print("D1",D1)

    G7=[]
    for k in range(len(G5)):
        b=G5[k]
        if Integers(4)(kk*q^b)==3 and Integers(11)(b)==0 and Integers(l)(kk*q^b) in D1:
            G7.append(b)
    print("G7=",G7)