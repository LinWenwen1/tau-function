#H3
kk=-31
q=3
L=[]
for i in range(len(divisors(396))):
    if Integers(2)(divisors(396)[i])==0 and is_prime(divisors(396)[i]+1) and divisors(396)[i]+1!=abs(kk) and divisors(396)[i]+1!=q and divisors(396)[i]+1<200:
        L.append(divisors(396)[i]+1)
print(q,'L=',L)

C=[[-3,-2],[-2,4],[-1,-2],[-3,2],[-2,-4],[-1,2]]
for n in range(len(C)):
    clf=C[n]
    print(n,clf)

    l=5
    cl=clf[0]
    BS=[1,2,3,4]#B5中s的值
    BT=[2, 1, 2, 0]#B5中t的值
    Est=[]
    F11=Integers(11)
    for i in range(len(BS)):
        s=BS[i]
        t=BT[i]
        E=[0,2*t,0,s^11,0]#代入s和t得到的椭圆曲线
        Est.append(E)
    #print('Est',Est)#根据s和t的值得到的j=1时所有的椭圆曲线


    C1S=[]
    C1T=[]
    for j in range(len(Est)):
        F=GF(l)
        Est1=EllipticCurve(F,Est[j])
        alE=l+1-Est1.cardinality()#计算al（Est1）
        result=F11(alE-cl)
        if result==0:#判断Norm条件
            C1S.append(BS[j])
            C1T.append(BT[j])
            #print(Est[j])#得到满足Norm条件的曲线以及对应的s和t的值
    #print("C1S",C1S,"C1T",C1T)


    D1=[]
    for i in range(len(C1S)):
        s=C1S[i]
        t=C1T[i]
        d=Integers(l)(t^2-s^11)
        D1.append(d)
    D1=sorted(set(D1),key=D1.index)
    #print("D1",D1)

    G5=[]
    for b in range(396):
        if Integers(4)(kk*q^b)==1 and Integers(11)(b)!=0 and Integers(l)(kk*q^b) in D1:
            G5.append(b)
    print("G5=",G5)


    l=7
    cl=clf[1]
    BS=[1, 2, 3, 4, 5, 6]
    BT=[2, 4, 0, 1, 0, 0]
    Est=[]
    F11=Integers(11)
    for i in range(len(BS)):
        s=BS[i]
        t=BT[i]
        E=[0,2*t,0,s^11,0]#代入s和t得到的椭圆曲线
        Est.append(E)
    #print('Est',Est)#根据s和t的值得到的j=1时所有的椭圆曲线


    C1S=[]
    C1T=[]
    for j in range(len(Est)):
        F=GF(l)
        Est1=EllipticCurve(F,Est[j])
        alE=l+1-Est1.cardinality()#计算al（Est1）
        result=F11(alE-cl)
        if result==0:#判断Norm条件
            C1S.append(BS[j])
            C1T.append(BT[j])
            #print(Est[j])#得到满足Norm条件的曲线以及对应的s和t的值
    #print("C1S",C1S,"C1T",C1T)


    D1=[]
    for i in range(len(C1S)):
        s=C1S[i]
        t=C1T[i]
        d=Integers(l)(t^2-s^11)
        D1.append(d)
    #print("D1",D1)


    G7=[]
    for k in range(len(G5)):
        b=G5[k]
        if Integers(4)(kk*q^b)==1 and Integers(11)(b)!=0 and Integers(l)(kk*q^b) in D1:
                G7.append(b)
    print("G7",G7)


3 L= [5, 7, 13, 19, 23, 37, 67, 199]
0 [-3, -2]
G5= []
G7 []
1 [-2, 4]
G5= [2, 6, 10, 14, 18, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62, 70, 74, 78, 82, 86, 90, 94, 98, 102, 106, 114, 118, 122, 126, 130, 134, 138, 142, 146, 150, 158, 162, 166, 170, 174, 178, 182, 186, 190, 194, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 246, 250, 254, 258, 262, 266, 270, 274, 278, 282, 290, 294, 298, 302, 306, 310, 314, 318, 322, 326, 334, 338, 342, 346, 350, 354, 358, 362, 366, 370, 378, 382, 386, 390, 394]
G7 []
2 [-1, -2]
G5= []
G7 []
3 [-3, 2]
G5= []
G7 []
4 [-2, -4]
G5= [2, 6, 10, 14, 18, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62, 70, 74, 78, 82, 86, 90, 94, 98, 102, 106, 114, 118, 122, 126, 130, 134, 138, 142, 146, 150, 158, 162, 166, 170, 174, 178, 182, 186, 190, 194, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 246, 250, 254, 258, 262, 266, 270, 274, 278, 282, 290, 294, 298, 302, 306, 310, 314, 318, 322, 326, 334, 338, 342, 346, 350, 354, 358, 362, 366, 370, 378, 382, 386, 390, 394]
G7 []
5 [-1, 2]
G5= []
G7 []