#H3
kk=7
q=31
L=[]
for i in range(len(divisors(396))):
    if Integers(2)(divisors(396)[i])==0 and is_prime(divisors(396)[i]+1) and divisors(396)[i]+1!=abs(kk) and divisors(396)[i]+1!=5 and divisors(396)[i]+1!=q and divisors(396)[i]+1<200:
        L.append(divisors(396)[i]+1)
print(q,'L=',L)
    
C=[[-2,4],[-2,-6],[-2,0],[-2,6],[-1,1],[-1,1],[0,4],[0,6],[0,-2],[1,-3],[1,1],[2,-2],[2,4],[2,0],[3,1]]
for n in range(len(C)):
    clf=C[n]
    print(n,clf)

    l=3
    cl=clf[0]
    BS=[1, 2]
    BT=[2, 0]
    Est=[]
    F11=Integers(11)
    for i in range(len(BS)):
        s=BS[i]
        t=BT[i]
        E=[0,-3*s^11+2*t^2,0,t^4-3*s^11*t^2+s^22,0]#代入s和t得到的椭圆曲线
        Est.append(E)
    #print('Est',Est)#根据s和t的值得到的j=1时所有的椭圆曲线


    C1S=[]
    C1T=[]
    for j in range(len(Est)):
        F=GF(l)
        Est1=EllipticCurve(F,Est[j])
        alE=l+1-Est1.cardinality()#计算al（Est1）
        result=F11(alE-cl)
        if result==0:#判断Norm条件
            C1S.append(BS[j])
            C1T.append(BT[j])
            #print(Est[j])#得到满足Norm条件的曲线以及对应的s和t的值
    #print("C1S",C1S,"C1T",C1T)


    D1=[]
    for i in range(len(C1S)):
        s=C1S[i]
        t=C1T[i]
        d=Integers(l)(t^4-3*s^11*t^2+s^22)
        D1.append(d)
    #print("D1",D1)

    G3=[]
    for b in range(396):
        if Integers(4)(kk*q^b)==1 and Integers(11)(b)!=0 and Integers(l)(kk*q^b) in D1:
            G3.append(b)
    print("G3",G3)

    l=13
    cl=clf[1]
    BS=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
    BT=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
    Est=[]
    F11=Integers(11)
    for i in range(len(BS)):
        s=BS[i]
        t=BT[i]
        E=[0,-3*s^11+2*t^2,0,t^4-3*s^11*t^2+s^22,0]#代入s和t得到的椭圆曲线
        Est.append(E)
    #print('Est',Est)#根据s和t的值得到的j=1时所有的椭圆曲线


    C1S=[]
    C1T=[]
    for j in range(len(Est)):
        F=GF(l)
        Est1=EllipticCurve(F,Est[j])
        alE=l+1-Est1.cardinality()#计算al（Est1）
        result=F11(alE-cl)
        if result==0:#判断Norm条件
            C1S.append(BS[j])
            C1T.append(BT[j])
            #print(Est[j])#得到满足Norm条件的曲线以及对应的s和t的值
    #print("C1S",C1S,"C1T",C1T)


    D1=[]
    for i in range(len(C1S)):
        s=C1S[i]
        t=C1T[i]
        d=Integers(l)(t^4-3*s^11*t^2+s^22)
        D1.append(d)
    #print("D1",D1)

    G13=[]
    for k in range(len(G3)):
        b=G3[k]
        if Integers(4)(kk*q^b)==1 and Integers(11)(b)!=0 and Integers(l)(kk*q^b) in D1:
            G13.append(b)
    print("G13",G13)
    
31 L= [3, 13, 19, 23, 37, 67, 199]
0 [-2, 4]
G3 []
G13 []
1 [-2, -6]
G3 []
G13 []
2 [-2, 0]
G3 []
G13 []
3 [-2, 6]
G3 []
G13 []
4 [-1, 1]
G3 []
G13 []
5 [-1, 1]
G3 []
G13 []
6 [0, 4]
G3 [1, 3, 5, 7, 9, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 277, 279, 281, 283, 285, 287, 289, 291, 293, 295, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 365, 367, 369, 371, 373, 375, 377, 379, 381, 383, 387, 389, 391, 393, 395]
G13 []
7 [0, 6]
G3 [1, 3, 5, 7, 9, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 277, 279, 281, 283, 285, 287, 289, 291, 293, 295, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 365, 367, 369, 371, 373, 375, 377, 379, 381, 383, 387, 389, 391, 393, 395]
G13 [1, 5, 9, 13, 17, 21, 25, 29, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 169, 173, 177, 181, 185, 189, 193, 197, 201, 205, 213, 217, 221, 225, 229, 233, 237, 241, 245, 249, 257, 261, 265, 269, 273, 277, 281, 285, 289, 293, 301, 305, 309, 313, 317, 321, 325, 329, 333, 337, 345, 349, 353, 357, 361, 365, 369, 373, 377, 381, 389, 393]
8 [0, -2]
G3 [1, 3, 5, 7, 9, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 277, 279, 281, 283, 285, 287, 289, 291, 293, 295, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 365, 367, 369, 371, 373, 375, 377, 379, 381, 383, 387, 389, 391, 393, 395]
G13 [1, 5, 9, 13, 17, 21, 25, 29, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 169, 173, 177, 181, 185, 189, 193, 197, 201, 205, 213, 217, 221, 225, 229, 233, 237, 241, 245, 249, 257, 261, 265, 269, 273, 277, 281, 285, 289, 293, 301, 305, 309, 313, 317, 321, 325, 329, 333, 337, 345, 349, 353, 357, 361, 365, 369, 373, 377, 381, 389, 393]
9 [1, -3]
G3 []
G13 []
10 [1, 1]
G3 []
G13 []
11 [2, -2]
G3 []
G13 []
12 [2, 4]
G3 []
G13 []
13 [2, 0]
G3 []
G13 []
14 [3, 1]
G3 []
G13 []